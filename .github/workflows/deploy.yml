name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build backend image
        run: docker build -t backend:test ./backend

      - name: Build frontend image
        run: docker build -t frontend:test ./frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            # Ensure Docker is installed and updated
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update -y
              sudo apt-get install -y docker.io
            fi

            # Ensure docker compose plugin is available
            if ! docker compose version &> /dev/null; then
              echo "Installing Docker Compose plugin..."
              sudo apt-get update -y
              sudo apt-get install -y docker-compose-plugin
            fi

            # Prepare app directory
            mkdir -p ~/app
            cd ~/app

            # Pull latest code
            if [ ! -d ".git" ]; then
              git clone https://github.com/${{ github.repository }} .
            else
              git reset --hard
              git pull origin main
            fi

            # Build & run with Docker Compose v2
            docker compose down || true
            docker compose up -d --build
          EOF
